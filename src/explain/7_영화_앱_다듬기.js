/* [영화 앱 스타일링하기]
 * - 지금부터 영화 앱을 꾸며보도록 하자. 스타일링의 핵심은 CSS이지만 HTML도 필요하므로 우선 HTML로
 * 컴포넌트의 골격을 세워보자. 교재에 나와있는 내용대로 구역별로 HTML 태그를 감싸고 클래스명을 설정
 * 하자. 태그에 클래스명을 부여해야 CSS로 해당 태그에 스타일을 부여하기 편해지기 때문이다. 
 * Movie 컴포넌트에도 교재대로 HTML을 추가해 보자.
 * 
 * [style 속성으로 title 스타일링하기]
 * - 영화 앱을 실행해 보면 배경이 회색으로 변한 것을 확인할 수 있따. 이제 리액트에서 CSS 파일을 사-
 * 용하여 스타일링하는 방법을 이해했을거라 생각한다. 다만 이 책에서는 CSS의 원리나, CSS를 작성하는
 * 방법은 자세히 설명하지 않겠다(분량 때문인듯. CSS 전문 책이 있을까?). 그 대신 클론 코딩을 할 수 있-
 * 도록 작성된 CSS 코드를 함께 적용하는 시간만 가질 것이니 걱정하지 않아도 된다. 
 * JSX로 뼈대를 만들었으니 이제 CSS로 영화 앱을 멋지게 스타일링해 보자. 
 * 영화 정보가 카드 모양으로 출력되도록 CSS를 설정했다. 이 영화 카드는 브라우저 폭에 따라 크기가 조-
 * 절될 것이다. 
 * 카드 안의 시놉시스를 180자 이내로 줄여봐자. 그러려면 summary props에 있는 문자열을 180자로 제한해-
 * 야 하는데, 이땐 JS의 slice() 함수를 사용한다. slice() 함수를 문자열에 적용하려면 [문자열].slice(
 * 시작, 끝)와 같이 사용하면 된다. 
 * react-router-dom을 설치했다면, 이제 컴포넌트를 역할에 맞게 분리해서 폴더에 담자. components 폴더-
 * 를 만들어 그 안에 Movie.js, Movie.css 파일을 옮기자. 그리고 routes 폴더를 만드는데, 여기엔 Home.-
 * js, About.js 파일을 만들어 메뉴를 만드는 데 사용할 것이다. 
 * Home.js 파일은 영화 앱 화면, About.js 파일은 개발자 소개 화면이다. Home.js 파일에 작성할 코드는 
 * App.js 파일의 코드를 그대로 복사하면 되니 Home.js 파일부터 수정해 보자. 
 * 
 * [Home.js 파일 수정하기]
 * - App.js의 코드를 Home.js로 복사하자. 클래스 이름, export 문에 있는 App을 모두 Home으로 바꿔 주자.
 * 그리고 Movie 컴포넌트를 import하고, 스타일링을 위한 Home.css도 임포트하자.  
 */